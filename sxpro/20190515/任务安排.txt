1.前端  数据库  数据交互（servlet 框架）

2.行业写代码  

前台 后台  运维  企业项目不可缺少

前端  java，c++，python 支撑业务逻辑   运维(项目上线之后)

JAVA体系

项目  无非就是完成一些功能  让人使用

上手快 （拷模板 不可以的）

前端 （html+js+jquery+ajax） 运用的产物（前端框架  前端库）
Vue,easyui  减少成本  

归根到底---》数据的流动性  数据流动性产生消耗  （减少消耗）   重构

时间换空间  空间换时间


后端  java  完成数据流动性的情况下----》我们要去消耗

有哪些方案 和  策略 值得你去尝试

--------------------------------------------------------------
运用一些新的技术 ，新的领域方向 不断解决数据流动的问题

java  1.设计模式  2.拿我学到技术来衡量我是不是很优秀 每一个框架所带来的思想是在变革 3.阅读量代表你所看到的思想有多少

-------------------------------------------------------
前端传递数据给后端做逻辑处理（决定是否需要持久化到物理介质当中）
（MVC模式） （规则是内存数据通电就存在，断电就消失）
--------------------------------------------------------目的
希望你能够思维和自律  （适应团队生存）


-----------------------------------------------------------------------------------------------------------------
git +  jk（持续集成）

1.你们要使用git进行项目的托管

2.svn 和 git 项目托管工具 （写的代码是不是要找地方放） 仓库  ----git仓库 --文件夹  ----》文件夹只有一个项目在里面也有可能有多个项目

每个负责的不同的功能（你的代码和他人的代码是没有关系），但是你们的功能之间会存在共通的数据交互（你们可能需要共同修改（使用）同一部分的局部代码）

SVN +  git
svn  集中式仓库  （最好的只有一个仓库）=====>中央式仓库
git  分布式仓库   (最好是人人都有一个仓库)  ======》人人都能当家做主

--------------------------使用全部都使用命令的方式

1.windows 安装git环境
2.组为单位  申请账号github账号  
3.如何成员共同访问同一个仓库 (使用账户和密码 或者密钥的方式)
4.如何往仓库提交文件（一个是往本地提交然后才是往远程仓库上面提交）
5.假定只有一个人允许提交，其他人如何从远程仓库中去下载仓库中的文件
6.git里面有一个概念叫做分支 （每个人可以在不同的分支做事情）如何创建，如何删除分支，如何合并分支 （命令方式）
7.如何协调文件的内容管理（如何通过git进行代码的多人协作） （思考题）

-------------------------环境要求
1.JDK 1.8  
2.eclipse 中文编码调整为UTF-8
3.额外的（tomcat8.0解压版  中文编码调整为UTF-8）
4.mysql5.6-5.7  (1.解压版的工具 2.把mysql注册到windows服务中 3.中文编码调整为UTF-8) 
--------------------任务时长（20190515 15:00至17:15)